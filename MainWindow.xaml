<Window x:Class="DragonInjector_Firmware_Tool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DragonInjector_Firmware_Tool"
        mc:Ignorable="d"
        Name="Window" Title="DragonInjector Firmware Tool" Height="519" Width="919" Opacity="0.96" WindowStartupLocation="CenterScreen" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" ResizeMode="NoResize" AllowsTransparency="True" BorderThickness="2" BorderBrush="Black" WindowStyle="None">
    <Window.Resources>
        
        <!--All of the image resources are here-->
        <ImageBrush x:Key="PayloadBoxImg" ImageSource="resources\input_field_normal_277_56.png"/>
        <ImageBrush x:Key="FlashButtonImg" ImageSource="resources\flash_firmware_normal_569_169.png"/>
        <ImageBrush x:Key="FlashAllButtonImg" ImageSource="resources\flash_all_normal_776_169.png"/>
        <ImageBrush x:Key="DriveButtonImg" ImageSource="resources\refresh_button_normal_538_56.png"/>
        <ImageBrush x:Key="PayloadButtonImg" ImageSource="resources\clear_button_normal.png"/>
        <ImageBrush x:Key="CheckUpdateButtonImg" ImageSource="resources\check_for_updates_normal_657_70.png"/>
        <ImageBrush x:Key="BootloaderButtonImg" ImageSource="resources\update_bootloader_normal_507_266.png"/>
        <ImageBrush x:Key="BootloaderAllButtonImg" ImageSource="resources\update_all_normal_754_266.png"/>
        <ImageBrush x:Key="CloseButtonImg" ImageSource="resources\exit_normal_855_0.png"/>
        <ImageBrush x:Key="LogoButtonImg" ImageSource="resources\di_logo_13_417.png"/>
        <BitmapImage x:Key="TitlePictureImg" UriSource="resources\title_bar_0_0.png"/>
        <BitmapImage x:Key="GridPictureImg" UriSource="resources\background_0_0.png"/>
        <BitmapImage x:Key="DriveBoxPictureImg" UriSource="resources\input_field_with_arrow_normal_277_56.png"/>
        <BitmapImage x:Key="PayloadGroupPictureImg" UriSource="resources\payload_group_background_18_49.png"/>
        <BitmapImage x:Key="FirmwareGroupPictureImg" UriSource="resources\firmware_group_background_18_148.png"/>
        <BitmapImage x:Key="BootloaderGroupPictureImg" UriSource="resources\bootloader_group_background_18_245.png"/>
        <BitmapImage x:Key="OutputGroupPictureImg" UriSource="resources\output_text_background_18_344.png"/>

        <ImageBrush x:Key="FlashButtonHoverImg" ImageSource="resources\flash_firmware_hover_569_169.png"/>
        <ImageBrush x:Key="FlashAllButtonHoverImg" ImageSource="resources\flash_all_hover_776_169.png"/>
        <ImageBrush x:Key="DriveButtonHoverImg" ImageSource="resources\refresh_button_hover_538_56.png"/>
        <ImageBrush x:Key="PayloadButtonHoverImg" ImageSource="resources\clear_button_hover.png"/>
        <ImageBrush x:Key="CheckUpdateButtonHoverImg" ImageSource="resources\check_for_updates_hover_657_70.png"/>
        <ImageBrush x:Key="BootloaderButtonHoverImg" ImageSource="resources\update_bootloader_hover_507_266.png"/>
        <ImageBrush x:Key="BootloaderAllButtonHoverImg" ImageSource="resources\update_all_hover_754_266.png"/>
        <ImageBrush x:Key="CloseButtonHoverImg" ImageSource="resources\exit_hover_855_0.png"/>
        <BitmapImage x:Key="DriveBoxPictureHoverImg" UriSource="resources\input_field_with_arrow_hover_277_56.png"/>

        <!--This section is strictly nuance behaviors and styling for elements of some controls-->
        <Style x:Key="NoHover" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#00FFFFFF"/>
            <Setter Property="BorderBrush" Value="#00FFFFFF"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#00FFFFFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#00FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#00FFFFFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#00FFFFFF"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#00FFFFFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#00FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#00FFFFFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#00FFFFFF"/>
                                <Setter Property="Foreground" Value="#00FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="Transparent" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="16" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border" BorderBrush="Transparent" CornerRadius="0" BorderThickness="1, 1, 1, 1" Background="Transparent" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="Transparent" Name="ButtonBorder" CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" Background="Transparent" />
                <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" Margin="1,-1,0,0" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="Transparent"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="Transparent" />
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="False">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="Transparent" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="Transparent"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="Transparent"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="Transparent"/>
                    <Setter Property="TextElement.Foreground" Value="White"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="White"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="myBorder">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="myBorder" Value="DarkRed" />
                                <Setter Property="Opacity" TargetName="myBorder" Value="0.7" />
                                <Setter Property="Width" TargetName="myBorder" Value="255" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="8" Margin="8,0,-2,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="0" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="40"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--These are the main styles to set values on controls-->
        <Style x:Key="FlashFirmwareStyle" TargetType="Button" BasedOn="{StaticResource NoHover}">
            <Setter Property="Background" Value="{StaticResource FlashButtonImg}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource FlashButtonHoverImg}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FlashFirmwareAllStyle" TargetType="Button" BasedOn="{StaticResource NoHover}">
            <Setter Property="Background" Value="{StaticResource FlashAllButtonImg}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource FlashAllButtonHoverImg}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BootloaderStyle" TargetType="Button" BasedOn="{StaticResource NoHover}">
            <Setter Property="Background" Value="{StaticResource BootloaderButtonImg}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BootloaderButtonHoverImg}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BootloaderAllStyle" TargetType="Button" BasedOn="{StaticResource NoHover}">
            <Setter Property="Background" Value="{StaticResource BootloaderAllButtonImg}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BootloaderAllButtonHoverImg}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckUpdatesStyle" TargetType="Button" BasedOn="{StaticResource NoHover}">
            <Setter Property="Background" Value="{StaticResource CheckUpdateButtonImg}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource CheckUpdateButtonHoverImg}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CloseStyle" TargetType="Button" BasedOn="{StaticResource NoHover}">
            <Setter Property="Background" Value="{StaticResource CloseButtonImg}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource CloseButtonHoverImg}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LogoStyle" TargetType="Button" BasedOn="{StaticResource NoHover}">
            <Setter Property="Background" Value="{StaticResource LogoButtonImg}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource LogoButtonImg}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PayloadStyle" TargetType="Button" BasedOn="{StaticResource NoHover}">
            <Setter Property="Background" Value="{StaticResource PayloadButtonImg}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PayloadButtonHoverImg}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DriveStyle" TargetType="Button" BasedOn="{StaticResource NoHover}">
            <Setter Property="Background" Value="{StaticResource DriveButtonImg}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource DriveButtonHoverImg}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="resources\EurostileNextLTPro-Regular.ttf #Eurostile Next LT Pro"/>
        </Style>
        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="FontFamily" Value="resources\EurostileNextLTPro-Regular.ttf #Eurostile Next LT Pro"/>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource PayloadBoxImg}"/>
            <Setter Property="FontFamily" Value="resources\EurostileNextLTPro-Regular.ttf #Eurostile Next LT Pro"/>
        </Style>

        <!--These are the main styles to set values on controls where they are a bit more tricky-->
        
        <Style x:Key="OutputBoxStyle" TargetType="ScrollViewer">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FlowDirection" Value="RightToLeft"/>
            <Setter Property="FontFamily" Value="resources\EurostileNextLTPro-Regular.ttf #Eurostile Next LT Pro"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar Name="PART_VerticalScrollBar"
                                Value="{TemplateBinding VerticalOffset}"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
                                Orientation="Horizontal"
                                Grid.Row="1"
                                Grid.Column="1"
                                Value="{TemplateBinding HorizontalOffset}"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="resources\EurostileNextLTPro-Regular.ttf #Eurostile Next LT Pro"/>
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Gray"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="PART_ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <Border Name="OutlineBoder" BorderBrush="Transparent" IsHitTestVisible="False" />
                            <Popup Name="PART_Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" >
                                    <Border Name="DropDownBorder" Background="Black" Margin="0, 1, 0, 0" CornerRadius="0" BorderThickness="0,0,0,0" BorderBrush="Black" Opacity="0.9"/>
                                    <ScrollViewer Margin="0,0,0,0" SnapsToDevicePixels="True" Width="255">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Window.Resources>
    <Grid Name="Grid" Margin="0" Width="919" Height="519" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
        <Image Name="GridBackground" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Width="919" Height="519" Source="{StaticResource GridPictureImg}"/>
        <Image Name="PayloadGroupPicture" HorizontalAlignment="Left" Margin="18,49,0,0" VerticalAlignment="Top" Width="890" Height="84" Source="{StaticResource PayloadGroupPictureImg}"/>
        <Image Name="FirmwareGroupPicture" HorizontalAlignment="Left" Margin="18,148,0,0" VerticalAlignment="Top" Width="890" Height="84" Source="{StaticResource FirmwareGroupPictureImg}"/>
        <TextBlock Name="PayloadLabel" HorizontalAlignment="Left" Margin="107,62,0,0" TextWrapping="Wrap" Text="Custom Payload: " VerticalAlignment="Top" Style="{StaticResource TextBlockStyle}"/>
        <TextBlock Name="DriveLabel" HorizontalAlignment="Left" Margin="56,101,0,0" TextWrapping="Wrap" Text="Select Dragoninjector: " VerticalAlignment="Top" Style="{StaticResource TextBlockStyle}"/>
        <Image Name="DriveBoxPicture" HorizontalAlignment="Left" Margin="276,95,0,0" VerticalAlignment="Top" Width="254" Height="31" Source="{StaticResource DriveBoxPictureImg}"/>
        <ComboBox Name="DriveBox" HorizontalAlignment="Left" Margin="276,95,0,0" VerticalAlignment="Top" Width="254" Height="31" Style="{StaticResource ComboBoxFlatStyle}" SelectionChanged="DriveBox_SelectionChanged"/>
        <TextBox Name="PayloadTextBox" HorizontalAlignment="Left" Margin="277,56,0,0" TextWrapping="Wrap" Text="Leave blank for DragonBoot" VerticalAlignment="Top" Width="254" Height="31" Style="{StaticResource TextBoxStyle}" PreviewMouseDown="PayloadTextBox_Click"/>
        <Button Name="PayloadButton" HorizontalAlignment="Left" Margin="538,56,0,0" VerticalAlignment="Top" Width="31" Height="31" Style="{StaticResource PayloadStyle}" Click="PayloadButton_Click"/>
        <Button Name="DriveButton" HorizontalAlignment="Left" Margin="538,95,0,0" VerticalAlignment="Top" Width="31" Height="31" BorderThickness="0" Style="{StaticResource DriveStyle}" Click="DriveButton_Click"/>
        <TextBlock Name="FirmwareLabel" HorizontalAlignment="Left" Margin="88,153,0,0" TextWrapping="Wrap" Text="Current Firmware: " VerticalAlignment="Top" Style="{StaticResource TextBlockStyle}"/>
        <TextBlock Name="LatestFirmwareLabel" HorizontalAlignment="Left" Margin="102,193,0,0" Text="Latest Firmware: " VerticalAlignment="Top" Style="{StaticResource TextBlockStyle}"/>
        <Button Name="FlashButton" HorizontalAlignment="Left" Margin="569,169,0,0" VerticalAlignment="Top" Height="44" Width="191" Style="{StaticResource FlashFirmwareStyle}" Click="FlashButton_Click"/>
        <Button Name="FlashAllButton" HorizontalAlignment="Left" Margin="776,169,0,0" VerticalAlignment="Top" Width="113" Height="44" Style="{StaticResource FlashFirmwareAllStyle}" Click="FlashAllButton_Click"/>
        <Image Name="BootloaderGroupPicture" HorizontalAlignment="Left" Margin="18,245,0,0" VerticalAlignment="Top" Width="890" Height="184" Source="{StaticResource BootloaderGroupPictureImg}"/>
        <Image Name="OutputGroupPicture" HorizontalAlignment="Left" Margin="18,344,0,0" VerticalAlignment="Top" Width="890" Height="159" Source="{StaticResource OutputGroupPictureImg}"/>
        <TextBlock Name="BootloaderLabel" HorizontalAlignment="Left" Margin="75,255,0,0" TextWrapping="Wrap" Text="Current Bootloader:" VerticalAlignment="Top" Foreground="White" Style="{StaticResource TextBlockStyle}"/>
        <TextBlock Name="BootloaderVersionLabel" HorizontalAlignment="Left" Margin="276,257,0,0" TextWrapping="Wrap" Opacity="0.6" VerticalAlignment="Top" Foreground="White" Style="{StaticResource TextBlockStyle}"/>
        <TextBlock Name="LatestBootloaderVersionLabel" HorizontalAlignment="Left" Margin="276,299,0,0" TextWrapping="Wrap" Opacity="0.6" VerticalAlignment="Top" Foreground="White" Style="{StaticResource TextBlockStyle}"/>
        <TextBlock Name="FirmwareVersionLabel" HorizontalAlignment="Left" Margin="276,155,0,0" TextWrapping="Wrap" Opacity="0.6" VerticalAlignment="Top" Foreground="White" Style="{StaticResource TextBlockStyle}"/>
        <TextBlock Name="LatestFirmwareVersionLabel" HorizontalAlignment="Left" Margin="276,196,0,0" TextWrapping="Wrap" Opacity = "0.6" VerticalAlignment="Top" Foreground="White" Style="{StaticResource TextBlockStyle}"/>
        <TextBlock Name="LatestBootloaderLabel" HorizontalAlignment="Left" Margin="90,297,0,0" TextWrapping="Wrap" Text="Latest Bootloader:" VerticalAlignment="Top" Foreground="White" Style="{StaticResource TextBlockStyle}"/>
        <Button Name="BootloaderButton" HorizontalAlignment="Left" Margin="507,266,0,0" VerticalAlignment="Top" Height="44" Width="230" Style="{StaticResource BootloaderStyle}" Click="BootloaderButton_Click"/>
        <Button Name="BootloaderAllButton" HorizontalAlignment="Left" Margin="754,266,0,0" VerticalAlignment="Top" Height="44" Width="135" Style="{StaticResource BootloaderAllStyle}" Click="BootloaderAllButton_Click"/>
        <Image Name="TitlePicture" HorizontalAlignment="Left" Margin="0,0,0,0" Height="35" VerticalAlignment="Top" Width="919" MouseDown="Drag_Click" Source="{StaticResource TitlePictureImg}"/>
        <TextBlock Name="TitleLabel" Margin="50,6,0,0" VerticalAlignment="Top" MouseDown="Drag_Click" Text="DragonInjector Firmware Tool" Style="{StaticResource TitleStyle}"/>
        <Button Name="CloseButton" HorizontalAlignment="Left" Margin="855,-1,0,0" VerticalAlignment="Top" Height="42" Width="64" BorderThickness="0" Style="{StaticResource CloseStyle}" Click="CloseButton_Click"/>
        <Button Name="CheckUpdateButton" HorizontalAlignment="Left" Margin="657,70,0,0" VerticalAlignment="Top" Height="42" Width="232" BorderThickness="0" Style="{StaticResource CheckUpdatesStyle}" Click="CheckUpdateButton_Click"/>
        <ScrollViewer Name="OutputBox" HorizontalAlignment="Left" Height="150" Margin="130,350,0,0" Content="...Starting DragonInjector Firmware Tool" VerticalAlignment="Top" Width="800" Style="{StaticResource OutputBoxStyle}"/>
        <Button Name="LogoButton" HorizontalAlignment="Left" Height="85" Margin="10,424,0,0" VerticalAlignment="Top" Width="109" BorderThickness="0" Style="{StaticResource LogoStyle}" Click="LogoButton_Click"/>
    </Grid>
</Window>